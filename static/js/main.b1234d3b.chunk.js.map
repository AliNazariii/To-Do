{"version":3,"sources":["Components/Tasks/Task/Task.module.scss","styles.module.scss","Components/NewTask/NewTask.module.scss","Components/Tasks/Tasks.module.scss","TaskContext.js","Components/NewTask/NewTask.js","Components/Tasks/Task/Task.js","Components/Tasks/Tasks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TaskContext","createContext","tasks","setTasks","NewTask","taskContext","useContext","useState","key","title","isPinned","isDone","priority","task","setTask","className","Styles","Form","onSubmit","e","preventDefault","newTasks","localStorage","setItem","JSON","stringify","parse","getItem","target","value","onChange","name","Date","type","placeholder","Task","props","starColor","data","LeftBlock","onClick","currentState","findIndex","class","style","fontSize","color","RightBlock","Priority","Checkbox","checked","Tasks","filter","sort","a","b","map","index","App","Layout","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,UAAY,wBAAwB,WAAa,yBAAyB,SAAW,yB,oBCAnKD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,OAAS,yB,mBCArDD,EAAOC,QAAU,CAAC,KAAO,wB,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,4KCMXC,EALKC,wBAAc,CAC9BC,OAAO,EACPC,SAAU,eCsCCC,MAtCf,WACI,IAAMC,EAAcC,qBAAWN,GADhB,EAESO,mBAAS,CAC7BC,IAAK,KACLC,MAAO,KACPC,UAAU,EACVC,QAAQ,EACRC,SAAU,MAPC,mBAERC,EAFQ,KAEFC,EAFE,KAyBf,OACI,0BAAMC,UAAWC,IAAOC,KAAMC,SATjB,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAQ,sBAAOhB,EAAYH,OAAnB,CAA0BW,IACxCS,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,IAC7ChB,EAAYF,SAASqB,KAAKE,MAAMJ,aAAaK,QAAQ,WACrDR,EAAES,OAAF,MAAkBC,MAAQ,IAIwBC,SAjBrC,SAACX,GAAO,IAAD,EACpBL,EAAQ,2BACDD,GADA,uBAEFM,EAAES,OAAOG,KAAOZ,EAAES,OAAOC,OAFvB,oBAGE,IAAIG,MAHN,OAiBH,2BAAOC,KAAK,OAAOF,KAAK,QAAQG,YAAY,yBAC5C,4BAAQH,KAAK,YACT,4BAAQF,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,SAEb,2BAAOI,KAAK,SAASJ,MAAM,U,iCCQfM,MAzCf,SAAcC,GACV,IAAM/B,EAAcC,qBAAWN,GAC3BqC,GAAoC,IAAxBD,EAAME,KAAK5B,SAAoB,UAAY,UAC3D,OACI,yBAAKK,UAAWC,IAAOmB,MACnB,yBAAKpB,UAAWC,IAAOuB,WACnB,4BAAQC,QAAS,SAACrB,GACN,IAAIsB,EAAeL,EAAME,KAAK5B,SAC1BW,EAAWhB,EAAYH,MAC3BmB,EAASA,EAASqB,WAAU,SAAC7B,GAAD,OAAUA,EAAKL,MAAQ4B,EAAME,KAAK9B,QAAME,UAAY+B,EAChFnB,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,IAC7ChB,EAAYF,SAASqB,KAAKE,MAAMJ,aAAaK,QAAQ,aAG7D,uBAAGgB,MAAM,iBAAiBC,MAAO,CAAEC,SAAU,OAAQC,MAAOT,IAA5D,SAEJ,4BAAKD,EAAME,KAAK7B,QAEpB,yBAAKM,UAAWC,IAAO+B,YACnB,yBAAKhC,UAAWC,IAAOgC,UACnB,4BAA6B,MAAxBZ,EAAME,KAAK1B,SAAmB,MAAgC,MAAxBwB,EAAME,KAAK1B,SAAmB,SAAW,SAExF,8BACI,2BACImB,KAAK,SACLhB,UAAWC,IAAOiC,SAClBhB,KAAK,WACLiB,QAASd,EAAME,KAAK3B,OACpBmB,SAAU,SAACX,GACP,IAAIE,EAAWhB,EAAYH,MAC3BmB,EAASA,EAASqB,WAAU,SAAC7B,GAAD,OAAUA,EAAKL,MAAQ4B,EAAME,KAAK9B,QAAMG,OAASQ,EAAES,OAAOsB,QACtF5B,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,IAC7ChB,EAAYF,SAASqB,KAAKE,MAAMJ,aAAaK,QAAQ,kBCQlEwB,MAvCf,WACI,IAAM9C,EAAcC,qBAAWN,GAE/B,OACI,yBAAKe,UAAWC,IAAOmC,OACnB,6BACI,4CACC9C,EAAYH,OACTG,EAAYH,MACPkD,QAAO,SAACvC,GAAD,OAA4B,IAAlBA,EAAKH,WAAqC,IAAhBG,EAAKF,UAChD0C,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE9C,IAAM+C,EAAE/C,KAAO,EAAI,KACpC6C,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE1C,SAAW2C,EAAE3C,UAAY,EAAI,KAC9C4C,KAAI,SAAC3C,EAAM4C,GAAP,OAAiB,kBAAC,EAAD,CAAMnB,KAAMzB,EAAML,IAAKiD,QAGzD,6BACI,qCACCpD,EAAYH,OACTG,EAAYH,MACPkD,QAAO,SAACvC,GAAD,OAA4B,IAAlBA,EAAKH,WAAsC,IAAhBG,EAAKF,UACjD0C,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE9C,IAAM+C,EAAE/C,KAAO,EAAI,KACpC6C,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE1C,SAAW2C,EAAE3C,UAAY,EAAI,KAC9C4C,KAAI,SAAC3C,EAAM4C,GAAP,OAAiB,kBAAC,EAAD,CAAMnB,KAAMzB,EAAML,IAAKiD,QAGzD,6BACI,oCACCpD,EAAYH,OACTG,EAAYH,MACPkD,QAAO,SAACvC,GAAD,OAA0B,IAAhBA,EAAKF,UACtB0C,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE9C,IAAM+C,EAAE/C,KAAO,EAAI,KACpC6C,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE1C,SAAW2C,EAAE3C,UAAY,EAAI,KAC9C4C,KAAI,SAAC3C,EAAM4C,GAAP,OAAiB,kBAAC,EAAD,CAAMnB,KAAMzB,EAAML,IAAKiD,UCPtDC,MAxBf,WACuC,OAAlCpC,aAAaK,QAAQ,UACxBL,aAAaC,QAAQ,QAASC,KAAKC,UAAU,CAC5C,CAAC,IAAO,IAAIO,KAAO,MAAS,kBAAmB,UAAY,EAAM,QAAU,EAAO,SAAY,QAHlF,MAMYzB,mBAASiB,KAAKE,MAAMJ,aAAaK,QAAQ,WANrD,mBAMPzB,EANO,KAMAC,EANA,KAOd,OACC,yBAAKY,UAAWC,IAAO0C,KACtB,yBAAK3C,UAAWC,IAAO2C,QACtB,kBAAC,EAAYC,SAAb,CACC/B,MAAO,CACN3B,MAAOA,EACPC,SAAUA,IAGX,kBAAC,EAAD,MACA,kBAAC,EAAD,UCXe0D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b1234d3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"Task_Task__1N61H\",\"Checkbox\":\"Task_Checkbox__on8SC\",\"LeftBlock\":\"Task_LeftBlock__gjI-E\",\"RightBlock\":\"Task_RightBlock__tNPHc\",\"Priority\":\"Task_Priority__3WYPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__fFNuF\",\"Layout\":\"styles_Layout__2if7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"NewTask_Form__27TbE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tasks\":\"Tasks_Tasks__2yelI\"};","import { createContext } from \"react\";\n\nconst TaskContext = createContext({\n    tasks: false,\n    setTasks: () => {}\n});\n\nexport default TaskContext;","import React, { useContext, useState } from 'react';\nimport Styles from './NewTask.module.scss';\nimport TaskContext from '../../TaskContext';\n\nfunction NewTask() {\n    const taskContext = useContext(TaskContext);\n    const [task, setTask] = useState({\n        key: null,\n        title: null,\n        isPinned: false,\n        isDone: false,\n        priority: '1'\n    })\n    const onChange = (e) => {\n        setTask({\n            ...task,\n            [e.target.name]: e.target.value,\n            key: new Date()\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const newTasks = [...taskContext.tasks, task]\n        localStorage.setItem('tasks', JSON.stringify(newTasks))\n        taskContext.setTasks(JSON.parse(localStorage.getItem('tasks')))\n        e.target['title'].value = '';\n    }\n\n    return (\n        <form className={Styles.Form} onSubmit={onSubmit} onChange={onChange}>\n            <input type=\"text\" name=\"title\" placeholder=\"Enter your task here\" />\n            <select name=\"priority\">\n                <option value=\"1\">Low</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">High</option>\n            </select>\n\t\t\t<input type=\"submit\" value=\"Add\" />\n        </form>\n    )\n}\n\nexport default NewTask;","import React, { useContext } from 'react';\nimport Styles from './Task.module.scss';\nimport TaskContext from '../../../TaskContext';\n\nfunction Task(props) {\n    const taskContext = useContext(TaskContext);\n    let starColor = props.data.isPinned === true ? '#a62626' : '#7a7a7a'\n    return (\n        <div className={Styles.Task}>\n            <div className={Styles.LeftBlock}>\n                <button onClick={(e) => {\n                            let currentState = props.data.isPinned\n                            let newTasks = taskContext.tasks\n                            newTasks[newTasks.findIndex((task) => task.key === props.data.key)].isPinned = !currentState\n                            localStorage.setItem('tasks', JSON.stringify(newTasks))\n                            taskContext.setTasks(JSON.parse(localStorage.getItem('tasks')))\n                        }}\n                >\n                    <i class=\"material-icons\" style={{ fontSize: \"20px\", color: starColor }}>star</i>\n                </button>\n                <h5>{props.data.title}</h5>\n            </div>\n            <div className={Styles.RightBlock}>\n                <div className={Styles.Priority}>\n                    <h5>{props.data.priority === '1' ? \"Low\" : props.data.priority === '2' ? \"Medium\" : \"High\"}</h5>\n                </div>\n                <form>\n                    <input\n                        name=\"isDone\"\n                        className={Styles.Checkbox}\n                        type=\"checkbox\"\n                        checked={props.data.isDone}\n                        onChange={(e) => {\n                            let newTasks = taskContext.tasks\n                            newTasks[newTasks.findIndex((task) => task.key === props.data.key)].isDone = e.target.checked\n                            localStorage.setItem('tasks', JSON.stringify(newTasks))\n                            taskContext.setTasks(JSON.parse(localStorage.getItem('tasks')))\n                        }} \n                    />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Task;","import React, { useContext } from 'react';\nimport Styles from './Tasks.module.scss';\nimport Task from './Task/Task';\nimport TaskContext from '../../TaskContext';\n\nfunction Tasks() {\n    const taskContext = useContext(TaskContext);\n\n    return (\n        <div className={Styles.Tasks}>\n            <div>\n                <h3>Pinned Tasks</h3>\n                {taskContext.tasks && \n                    taskContext.tasks\n                        .filter((task) => task.isPinned === true && task.isDone === false)\n                        .sort((a, b) => a.key > b.key ? -1 : 1)\n                        .sort((a, b) => a.priority > b.priority ? -1 : 1)\n                        .map((task, index) => <Task data={task} key={index} />)\n                }\n            </div>\n            <div>\n                <h3>To-Do</h3>\n                {taskContext.tasks && \n                    taskContext.tasks\n                        .filter((task) => task.isPinned === false && task.isDone === false)\n                        .sort((a, b) => a.key > b.key ? -1 : 1)\n                        .sort((a, b) => a.priority > b.priority ? -1 : 1)\n                        .map((task, index) => <Task data={task} key={index} />)\n                }\n            </div>\n            <div>\n                <h3>Done</h3>\n                {taskContext.tasks && \n                    taskContext.tasks\n                        .filter((task) => task.isDone === true)\n                        .sort((a, b) => a.key > b.key ? -1 : 1)\n                        .sort((a, b) => a.priority > b.priority ? -1 : 1)\n                        .map((task, index) => <Task data={task} key={index} />)\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Tasks;","import React, { useState } from 'react';\nimport Styles from './styles.module.scss';\nimport NewTask from './Components/NewTask/NewTask';\nimport Tasks from './Components/Tasks/Tasks';\nimport TaskContext from './TaskContext';\n\nfunction App() {\n\tif (localStorage.getItem('tasks') === null) {\n\t\tlocalStorage.setItem('tasks', JSON.stringify([\n\t\t\t{'key': new Date(),'title': 'a task for tes.', 'isPinned': true, 'isDone': false, 'priority': '1'}\n\t\t]))\n\t}\n\tconst [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('tasks')))\n\treturn (\n\t\t<div className={Styles.App}>\n\t\t\t<div className={Styles.Layout}>\n\t\t\t\t<TaskContext.Provider \n\t\t\t\t\tvalue={{\n\t\t\t\t\t\ttasks: tasks, \n\t\t\t\t\t\tsetTasks: setTasks\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<NewTask />\n\t\t\t\t\t<Tasks />\n\t\t\t\t</TaskContext.Provider>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}